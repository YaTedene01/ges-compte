openapi: 3.0.0
info:
  title: Banque API
  description: API pour la gestion des comptes bancaires
  version: 1.0.0
servers:
  - url: http://api.banque.example.com/api/v1
paths:
  /comptes:
    get:
      summary: Lister tous les comptes
      description: |
        1-Admin peut recuperer la liste de tous les comptes
        2-Client peut recuperer la liste de ses comptes
        NB : Liste compte non supprimes type cheque ou compte Epargne Actif
      parameters:
        - name: page
          in: query
          description: Numéro de page
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Nombre d'éléments par page
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
        - name: type
          in: query
          description: Filtrer par type
          required: false
          schema:
            type: string
            enum: [epargne, cheque]
        - name: statut
          in: query
          description: Filtrer par statut
          required: false
          schema:
            type: string
            enum: [actif, bloque, ferme]
        - name: search
          in: query
          description: Recherche par titulaire ou numéro
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Tri
          required: false
          schema:
            type: string
            enum: [dateCreation, solde, titulaire]
        - name: order
          in: query
          description: Ordre
          required: false
          schema:
            type: string
            enum: [asc, desc]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des comptes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Compte'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    $ref: '#/components/schemas/Links'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Compte:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        numeroCompte:
          type: string
          example: "C00123456"
        titulaire:
          type: string
          example: "Amadou Diallo"
        type:
          type: string
          enum: [epargne, cheque]
          example: "epargne"
        solde:
          type: number
          format: float
          example: 1250000
        devise:
          type: string
          example: "FCFA"
        dateCreation:
          type: string
          format: date-time
          example: "2023-03-15T00:00:00Z"
        statut:
          type: string
          enum: [actif, bloque, ferme]
          example: "bloque"
        motifBlocage:
          type: string
          example: "Inactivité de 30+ jours"
        metadata:
          type: object
          properties:
            derniereModification:
              type: string
              format: date-time
              example: "2023-06-10T14:30:00Z"
            version:
              type: integer
              example: 1
    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 3
        totalItems:
          type: integer
          example: 25
        itemsPerPage:
          type: integer
          example: 10
        hasNext:
          type: boolean
          example: true
        hasPrevious:
          type: boolean
          example: false
    Links:
      type: object
      properties:
        self:
          type: string
          example: "/api/v1/comptes?page=1&limit=10"
        next:
          type: string
          example: "/api/v1/comptes?page=2&limit=10"
        first:
          type: string
          example: "/api/v1/comptes?page=1&limit=10"
        last:
          type: string
          example: "/api/v1/comptes?page=3&limit=10"
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "ERROR_400"
            message:
              type: string
              example: "Bad Request"
            details:
              type: object
            timestamp:
              type: string
              format: date-time
            path:
              type: string
              example: "/api/v1/comptes"
            traceId:
              type: string
              example: "abc-def-ghi-123"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT